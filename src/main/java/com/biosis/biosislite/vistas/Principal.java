/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.biosis.biosislite.vistas;

import com.biosis.biosislite.Main;
import com.biosis.biosislite.controladores.EmpleadoControlador;
//import com.biosis.biosislite.controladores.MatriculaControlador;
//import com.biosis.biosislite.controladores.NotificacionControlador;
import com.biosis.biosislite.controladores.PeriodoControlador;
//import com.biosis.biosislite.controladores.SeccionHorarioControlador;
//import com.biosis.biosislite.controladores.ServidorSmtpControlador;
import com.biosis.biosislite.controladores.UsuarioControlador;
import com.biosis.biosislite.entidades.RolAcceso;
import com.biosis.biosislite.entidades.Usuario;
import com.biosis.biosislite.entidades.escalafon.Empleado;
import com.biosis.biosislite.utiles.PersButtonUI;
import com.biosis.biosislite.utiles.UsuarioActivo;
import com.biosis.biosislite.vistas.dialogos.DlgCambiarPassword;
import com.biosis.biosislite.vistas.dialogos.inventario.DlgMovimientoInventario;
import com.biosis.biosislite.vistas.inventario.MantenimientoBien;
import com.biosis.biosislite.vistas.inventario.MantenimientoCampo;
import com.biosis.biosislite.vistas.inventario.MantenimientoClase;
import com.biosis.biosislite.vistas.inventario.MantenimientoFactura;
import com.biosis.biosislite.vistas.inventario.MantenimientoTipo;
import com.biosis.biosislite.vistas.inventario.VistaImprimir;
import com.biosis.biosislite.vistas.inventario.VistaInventario;
import com.biosis.biosislite.vistas.inventario.VistaReporteInventario;
import com.biosis.biosislite.vistas.inventario.VistaStock;
import com.biosis.biosislite.vistas.inventario.VistaVerMovimientos;
import com.biosis.biosislite.vistas.mantenimientos.CRUDAreaSede;
import com.biosis.biosislite.vistas.mantenimientos.CRUDGrupoHorario;
import com.biosis.biosislite.vistas.mantenimientos.CRUDHorario;
import com.biosis.biosislite.vistas.mantenimientos.CRUDJornada;
import com.biosis.biosislite.vistas.mantenimientos.CRUDPeriodo;
import com.biosis.biosislite.vistas.mantenimientos.CRUDTipoPermiso;
import com.biosis.biosislite.vistas.mantenimientos.CRUDUsuario;
import com.biosis.biosislite.vistas.reportes.RptNoMarcan;
import com.biosis.biosislite.vistas.reportes.RptPermisos;
import com.biosis.biosislite.vistas.reportes.RptRegistroAsistencia;
//import com.biosis.biosislite.vistas.reportes.RptRegistroAsistenciaAlumno;
import com.biosis.biosislite.vistas.reportes.RptTardanzasMes;
import com.biosis.biosislite.vistas.reportes.RptVacaciones;
import com.personal.utiles.ImagenFondo;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.MouseMotionListener;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.mail.MessagingException;
import javax.swing.JInternalFrame;
import javax.swing.JMenuBar;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author fesquivelc
 */
public class Principal extends javax.swing.JFrame {

//    private final AlertaControlador ac = new AlertaControlador();
//    private final NotificacionControlador nc = new NotificacionControlador();
//    private final MatriculaControlador mc = new MatriculaControlador();
//    private final PeriodoControlador pc = new PeriodoControlador();
//    private final ServidorSmtpControlador ssc = ServidorSmtpControlador.getInstance();
//    private final AsignacionNGSControlador asgc = new AsignacionNGSControlador();
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("/icon/iconosLogin/logo.png")));
        this.setTitle(Main.APLICACION_TITULO);
//        this.jMenuItem6.setVisible(false);
//        setIconImage(new ImageIcon(getClass().getResource("iconos/logo.png")).getImage());
        File file = new File(Main.APLICACION_FONDO);
        if (file.exists()) {
            ImagenFondo borde;
            try {
                borde = new ImagenFondo(ImageIO.read(file));
                this.desktopPane.setBorder(borde);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        ocultarInventario();
//        reloj();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSeparator2 = new javax.swing.JSeparator();
        desktopPane = new javax.swing.JDesktopPane();
        pnlBotnes = new javax.swing.JPanel();
        pnlDatosUsuario = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        lblRol = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pnlAccesos = new javax.swing.JPanel();
        btnEmpleados = new javax.swing.JButton();
        btnMarcaciones = new javax.swing.JButton();
        btnAsignarPermiso = new javax.swing.JButton();
        pnlFooter = new javax.swing.JPanel();
        lblJuvitec = new javax.swing.JLabel();
        menuBar = new BackgroundJMenuBar();
        mnuMarcaciones = new javax.swing.JMenu();
        mnuVerEmpleados = new javax.swing.JMenuItem();
        mnuMarcacionesSinProcesar = new javax.swing.JMenuItem();
        mnuHorario = new javax.swing.JMenu();
        mnuJornada = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnuPermiso = new javax.swing.JMenu();
        mnuTiposPermiso = new javax.swing.JMenuItem();
        mnuAsignarPermiso = new javax.swing.JMenuItem();
        asigVacaciones = new javax.swing.JMenuItem();
        mnuBien = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        mnuInventarios = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        mnuReportes = new javax.swing.JMenu();
        mnuAsistencia = new javax.swing.JMenuItem();
        mnuRepPermiso = new javax.swing.JMenuItem();
        mnuRepVacacion = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnuStock = new javax.swing.JMenuItem();
        mnuReporteInventario = new javax.swing.JMenuItem();
        mnuConfiguracion = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        mnuCambiarContrasenia = new javax.swing.JMenuItem();
        mnuControlUsuario = new javax.swing.JMenuItem();
        mnuConfiguracionBD = new javax.swing.JMenuItem();
        mnuPeriodos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SISTEMA DE CONTROL DE ASISTENCIA DE PERSONAL - BIOSIS - GOBIERNO REGIONAL PIURA");
        setIconImage(new javax.swing.ImageIcon("iconos/logo.png").getImage());

        desktopPane.setBackground(new java.awt.Color(91, 151, 255));
        desktopPane.setForeground(new java.awt.Color(91, 151, 255));
        desktopPane.setDragMode(javax.swing.JDesktopPane.OUTLINE_DRAG_MODE);
        desktopPane.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        getContentPane().add(desktopPane, java.awt.BorderLayout.CENTER);

        pnlBotnes.setBackground(new java.awt.Color(213, 233, 249));
        pnlBotnes.setMinimumSize(new java.awt.Dimension(579, 70));
        pnlBotnes.setPreferredSize(new java.awt.Dimension(579, 70));
        java.awt.GridBagLayout pnlBotnesLayout = new java.awt.GridBagLayout();
        pnlBotnesLayout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0};
        pnlBotnesLayout.rowHeights = new int[] {0};
        pnlBotnes.setLayout(pnlBotnesLayout);

        pnlDatosUsuario.setLayout(new java.awt.GridBagLayout());

        lblUsuario.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblUsuario.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatosUsuario.add(lblUsuario, gridBagConstraints);

        lblRol.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lblRol.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        pnlDatosUsuario.add(lblRol, gridBagConstraints);

        lblFecha.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lblFecha.setText("jLabel3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatosUsuario.add(lblFecha, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconosLogin/logo3.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        pnlDatosUsuario.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        pnlDatosUsuario.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 7);
        pnlBotnes.add(pnlDatosUsuario, gridBagConstraints);

        pnlAccesos.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        btnEmpleados.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnEmpleados.setForeground(new java.awt.Color(45, 115, 167));
        btnEmpleados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconosLogin/bienes32x32B.png"))); // NOI18N
        btnEmpleados.setText("Bienes");
        btnEmpleados.setMaximumSize(new java.awt.Dimension(150, 44));
        btnEmpleados.setMinimumSize(new java.awt.Dimension(150, 44));
        btnEmpleados.setPreferredSize(new java.awt.Dimension(150, 44));
        btnEmpleados.setUI(new PersButtonUI("#D5E9F9", "#2D73A7"));
        btnEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpleadosActionPerformed(evt);
            }
        });
        pnlAccesos.add(btnEmpleados);

        btnMarcaciones.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnMarcaciones.setForeground(new java.awt.Color(45, 115, 167));
        btnMarcaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconosLogin/inventario32x32.png"))); // NOI18N
        btnMarcaciones.setText("Inventarios");
        btnMarcaciones.setMaximumSize(new java.awt.Dimension(200, 44));
        btnMarcaciones.setMinimumSize(new java.awt.Dimension(200, 44));
        btnMarcaciones.setPreferredSize(new java.awt.Dimension(200, 44));
        btnMarcaciones.setUI( new PersButtonUI("#D5E9F9", "#2D73A7"));
        btnMarcaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcacionesActionPerformed(evt);
            }
        });
        pnlAccesos.add(btnMarcaciones);

        btnAsignarPermiso.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnAsignarPermiso.setForeground(new java.awt.Color(45, 115, 167));
        btnAsignarPermiso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/imprimir32x32B.png"))); // NOI18N
        btnAsignarPermiso.setText("Impresora");
        btnAsignarPermiso.setMaximumSize(new java.awt.Dimension(155, 44));
        btnAsignarPermiso.setMinimumSize(new java.awt.Dimension(155, 44));
        btnAsignarPermiso.setPreferredSize(new java.awt.Dimension(155, 44));
        btnAsignarPermiso.setUI(new PersButtonUI("#D5E9F9","#2D73A7"));
        btnAsignarPermiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarPermisoActionPerformed(evt);
            }
        });
        pnlAccesos.add(btnAsignarPermiso);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 0);
        pnlBotnes.add(pnlAccesos, gridBagConstraints);

        getContentPane().add(pnlBotnes, java.awt.BorderLayout.PAGE_START);

        pnlFooter.setLayout(new java.awt.BorderLayout());

        lblJuvitec.setBackground(new java.awt.Color(45, 115, 167));
        lblJuvitec.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lblJuvitec.setForeground(new java.awt.Color(255, 255, 255));
        lblJuvitec.setText("juvitec.com.pe - ventas@juvitec.com.pe ");
        lblJuvitec.setOpaque(true);
        pnlFooter.add(lblJuvitec, java.awt.BorderLayout.SOUTH);

        getContentPane().add(pnlFooter, java.awt.BorderLayout.SOUTH);

        menuBar.setBackground(new java.awt.Color(45, 115, 167));
        menuBar.setForeground(new java.awt.Color(45, 115, 167));
        menuBar.setPreferredSize(new java.awt.Dimension(442, 45));

        mnuMarcaciones.setBackground(new java.awt.Color(45, 115, 167));
        mnuMarcaciones.setForeground(new java.awt.Color(255, 255, 255));
        mnuMarcaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/usuario32x32.png"))); // NOI18N
        mnuMarcaciones.setMnemonic('e');
        mnuMarcaciones.setText("Usuarios");
        mnuMarcaciones.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuMarcaciones.setMaximumSize(new java.awt.Dimension(125, 44));
        mnuMarcaciones.setMinimumSize(new java.awt.Dimension(125, 44));
        mnuMarcaciones.setOpaque(true);
        mnuMarcaciones.setPreferredSize(new java.awt.Dimension(125, 44));

        mnuVerEmpleados.setBackground(new java.awt.Color(153, 204, 255));
        mnuVerEmpleados.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuVerEmpleados.setMnemonic('t');
        mnuVerEmpleados.setText("Ver usuarios");
        mnuVerEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuVerEmpleadosActionPerformed(evt);
            }
        });
        mnuMarcaciones.add(mnuVerEmpleados);

        mnuMarcacionesSinProcesar.setBackground(new java.awt.Color(255, 255, 255));
        mnuMarcacionesSinProcesar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuMarcacionesSinProcesar.setText("Marcaciones de usuarios");
        mnuMarcacionesSinProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuMarcacionesSinProcesarActionPerformed(evt);
            }
        });
        mnuMarcaciones.add(mnuMarcacionesSinProcesar);

        menuBar.add(mnuMarcaciones);

        mnuHorario.setBackground(new java.awt.Color(45, 115, 167));
        mnuHorario.setForeground(new java.awt.Color(255, 255, 255));
        mnuHorario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/time.png"))); // NOI18N
        mnuHorario.setMnemonic('f');
        mnuHorario.setText("Horarios");
        mnuHorario.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuHorario.setMaximumSize(new java.awt.Dimension(120, 44));
        mnuHorario.setMinimumSize(new java.awt.Dimension(120, 44));
        mnuHorario.setOpaque(true);
        mnuHorario.setPreferredSize(new java.awt.Dimension(120, 44));

        mnuJornada.setBackground(new java.awt.Color(153, 204, 255));
        mnuJornada.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuJornada.setMnemonic('o');
        mnuJornada.setText("Jornadas");
        mnuJornada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuJornadaActionPerformed(evt);
            }
        });
        mnuHorario.add(mnuJornada);

        jMenuItem4.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jMenuItem4.setText("Horarios / Asignar Horarios");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        mnuHorario.add(jMenuItem4);

        jMenuItem3.setBackground(new java.awt.Color(153, 204, 255));
        jMenuItem3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jMenuItem3.setText("Grupo Horario");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mnuHorario.add(jMenuItem3);

        menuBar.add(mnuHorario);

        mnuPermiso.setBackground(new java.awt.Color(45, 115, 167));
        mnuPermiso.setForeground(new java.awt.Color(255, 255, 255));
        mnuPermiso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/permisos.png"))); // NOI18N
        mnuPermiso.setText("Permisos");
        mnuPermiso.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuPermiso.setMaximumSize(new java.awt.Dimension(120, 44));
        mnuPermiso.setMinimumSize(new java.awt.Dimension(120, 44));
        mnuPermiso.setOpaque(true);
        mnuPermiso.setPreferredSize(new java.awt.Dimension(120, 44));

        mnuTiposPermiso.setBackground(new java.awt.Color(153, 204, 255));
        mnuTiposPermiso.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuTiposPermiso.setText("Tipos de permiso");
        mnuTiposPermiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTiposPermisoActionPerformed(evt);
            }
        });
        mnuPermiso.add(mnuTiposPermiso);

        mnuAsignarPermiso.setBackground(new java.awt.Color(255, 255, 255));
        mnuAsignarPermiso.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuAsignarPermiso.setText("Asignar permiso");
        mnuAsignarPermiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAsignarPermisoActionPerformed(evt);
            }
        });
        mnuPermiso.add(mnuAsignarPermiso);

        asigVacaciones.setBackground(new java.awt.Color(153, 204, 255));
        asigVacaciones.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        asigVacaciones.setText("Asignar vacaciones");
        asigVacaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asigVacacionesActionPerformed(evt);
            }
        });
        mnuPermiso.add(asigVacaciones);

        menuBar.add(mnuPermiso);

        mnuBien.setBackground(new java.awt.Color(45, 115, 167));
        mnuBien.setForeground(new java.awt.Color(255, 255, 255));
        mnuBien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bienes32x32.png"))); // NOI18N
        mnuBien.setText("Bienes");
        mnuBien.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuBien.setMaximumSize(new java.awt.Dimension(120, 44));
        mnuBien.setMinimumSize(new java.awt.Dimension(120, 44));
        mnuBien.setOpaque(true);
        mnuBien.setPreferredSize(new java.awt.Dimension(120, 44));

        jMenuItem17.setText("Atributos del bien");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        mnuBien.add(jMenuItem17);

        jMenuItem18.setText("Bien/Producto");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        mnuBien.add(jMenuItem18);

        jMenuItem19.setText("Clase del bien");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        mnuBien.add(jMenuItem19);

        jMenuItem20.setText("Factura del bien");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        mnuBien.add(jMenuItem20);

        jMenuItem21.setText("Tipo de bien");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        mnuBien.add(jMenuItem21);

        menuBar.add(mnuBien);

        mnuInventarios.setBackground(new java.awt.Color(45, 115, 167));
        mnuInventarios.setForeground(new java.awt.Color(255, 255, 255));
        mnuInventarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconosLogin/inventario32x32B.png"))); // NOI18N
        mnuInventarios.setText("Inventarios");
        mnuInventarios.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuInventarios.setMaximumSize(new java.awt.Dimension(147, 44));
        mnuInventarios.setOpaque(true);
        mnuInventarios.setPreferredSize(new java.awt.Dimension(147, 44));

        jMenuItem10.setText("Entrega de inventario");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        mnuInventarios.add(jMenuItem10);

        jMenuItem9.setText("Inventario físico");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        mnuInventarios.add(jMenuItem9);

        jMenuItem11.setText("Movimientos de inventario");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        mnuInventarios.add(jMenuItem11);

        menuBar.add(mnuInventarios);

        mnuReportes.setBackground(new java.awt.Color(45, 115, 167));
        mnuReportes.setForeground(new java.awt.Color(255, 255, 255));
        mnuReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reporte32x32.png"))); // NOI18N
        mnuReportes.setText("Reportes");
        mnuReportes.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuReportes.setMaximumSize(new java.awt.Dimension(120, 44));
        mnuReportes.setMinimumSize(new java.awt.Dimension(120, 44));
        mnuReportes.setOpaque(true);
        mnuReportes.setPreferredSize(new java.awt.Dimension(120, 44));

        mnuAsistencia.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuAsistencia.setText("Reportes de asistencia");
        mnuAsistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAsistenciaActionPerformed(evt);
            }
        });
        mnuReportes.add(mnuAsistencia);

        mnuRepPermiso.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuRepPermiso.setText("Reportes de permisos / licencias / comisiones de servicio");
        mnuRepPermiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRepPermisoActionPerformed(evt);
            }
        });
        mnuReportes.add(mnuRepPermiso);

        mnuRepVacacion.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuRepVacacion.setText("Reporte de vacaciones");
        mnuRepVacacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRepVacacionActionPerformed(evt);
            }
        });
        mnuReportes.add(mnuRepVacacion);

        jMenuItem1.setText("Imprimir etiquetas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuReportes.add(jMenuItem1);

        mnuStock.setText("Reporte de stock");
        mnuStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStockActionPerformed(evt);
            }
        });
        mnuReportes.add(mnuStock);

        mnuReporteInventario.setText("Reporte de inventarios");
        mnuReporteInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReporteInventarioActionPerformed(evt);
            }
        });
        mnuReportes.add(mnuReporteInventario);

        menuBar.add(mnuReportes);

        mnuConfiguracion.setBackground(new java.awt.Color(45, 115, 167));
        mnuConfiguracion.setForeground(new java.awt.Color(255, 255, 255));
        mnuConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/config32x32.png"))); // NOI18N
        mnuConfiguracion.setText("Configuración");
        mnuConfiguracion.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mnuConfiguracion.setMaximumSize(new java.awt.Dimension(147, 44));
        mnuConfiguracion.setOpaque(true);
        mnuConfiguracion.setPreferredSize(new java.awt.Dimension(147, 44));

        jMenuItem7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jMenuItem7.setText("Áreas");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(jMenuItem7);

        mnuCambiarContrasenia.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuCambiarContrasenia.setText("Cambiar contraseña");
        mnuCambiarContrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCambiarContraseniaActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuCambiarContrasenia);

        mnuControlUsuario.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuControlUsuario.setText("Control de usuarios");
        mnuControlUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuControlUsuarioActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuControlUsuario);

        mnuConfiguracionBD.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuConfiguracionBD.setText("Configuración de bases");
        mnuConfiguracionBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConfiguracionBDActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuConfiguracionBD);

        mnuPeriodos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        mnuPeriodos.setText("Periodos");
        mnuPeriodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPeriodosActionPerformed(evt);
            }
        });
        mnuConfiguracion.add(mnuPeriodos);

        menuBar.add(mnuConfiguracion);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuVerEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuVerEmpleadosActionPerformed
        // TODO add your handling code here:
        empleados();
    }//GEN-LAST:event_mnuVerEmpleadosActionPerformed

    private void mnuJornadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuJornadaActionPerformed
        // TODO add your handling code here:
        CRUDJornada jornadas = new CRUDJornada();
        agregarAPanel(jornadas, true);
    }//GEN-LAST:event_mnuJornadaActionPerformed

    private void mnuMarcacionesSinProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuMarcacionesSinProcesarActionPerformed
        // TODO add your handling code here:
        marcaciones();

    }//GEN-LAST:event_mnuMarcacionesSinProcesarActionPerformed

    private void mnuTiposPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTiposPermisoActionPerformed
        // TODO add your handling code here:
        CRUDTipoPermiso tipos = new CRUDTipoPermiso();
        agregarAPanel(tipos, true);
    }//GEN-LAST:event_mnuTiposPermisoActionPerformed

    private void mnuAsignarPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAsignarPermisoActionPerformed
        // TODO add your handling code here:
        permiso();
    }//GEN-LAST:event_mnuAsignarPermisoActionPerformed

    private void btnEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpleadosActionPerformed
        // TODO add your handling code here:
        MantenimientoBien bien = MantenimientoBien.getInstancia();
        agregarAPanel(bien, true);
    }//GEN-LAST:event_btnEmpleadosActionPerformed

    private void btnMarcacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcacionesActionPerformed
        // TODO add your handling code here:
        VistaInventario inv = VistaInventario.getInstancia();
        agregarAPanel(inv, true);
    }//GEN-LAST:event_btnMarcacionesActionPerformed

    private void btnAsignarPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarPermisoActionPerformed
        // TODO add your handling code here:
        VistaImprimir imprimir = VistaImprimir.getInstancia();
        agregarAPanel(imprimir, true);
    }//GEN-LAST:event_btnAsignarPermisoActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        agregarAPanel(new HorarioRotativo(), true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void mnuRepVacacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRepVacacionActionPerformed
        // TODO add your handling code here:
//        RptTardanzasMes tardanzasMes = new RptTardanzasMes();
//        agregarAPanel(tardanzasMes, true);
        
        RptVacaciones vacaciones = new RptVacaciones();
        agregarAPanel(vacaciones, true);
    }//GEN-LAST:event_mnuRepVacacionActionPerformed

    private void mnuRepPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRepPermisoActionPerformed
        // TODO add your handling code here:
        reportePermiso();
    }//GEN-LAST:event_mnuRepPermisoActionPerformed

    private void mnuAsistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAsistenciaActionPerformed
        // TODO add your handling code here:
        //        reporteAsistencia();
        registroAsistencia();
    }//GEN-LAST:event_mnuAsistenciaActionPerformed

    private void mnuPeriodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPeriodosActionPerformed
        // TODO add your handling code here:
        CRUDPeriodo periodos = new CRUDPeriodo();
        agregarAPanel(periodos, true);
    }//GEN-LAST:event_mnuPeriodosActionPerformed

    private void mnuCambiarContraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCambiarContraseniaActionPerformed
        // TODO add your handling code here:
        DlgCambiarPassword passwd = new DlgCambiarPassword(this, UsuarioActivo.getUsuario(), true);
        passwd.setVisible(true);
    }//GEN-LAST:event_mnuCambiarContraseniaActionPerformed

    private void mnuControlUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuControlUsuarioActionPerformed
        // TODO add your handling code here:
        CRUDUsuario usuarios = new CRUDUsuario();
        agregarAPanel(usuarios);
    }//GEN-LAST:event_mnuControlUsuarioActionPerformed

    private void mnuConfiguracionBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConfiguracionBDActionPerformed
        // TODO add your handling code here:
        Configuracion configBD = new Configuracion();
        agregarAPanel(configBD, this.getSize().width, 450);

        BasicInternalFrameUI ui = (BasicInternalFrameUI) configBD.getUI();
        Component northPane = ui.getNorthPane();
        MouseMotionListener[] motionListeners = (MouseMotionListener[]) northPane.getListeners(MouseMotionListener.class);

        for (MouseMotionListener listener : motionListeners) {
            northPane.removeMouseMotionListener(listener);
        }
    }//GEN-LAST:event_mnuConfiguracionBDActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        CRUDGrupoHorario grupos = new CRUDGrupoHorario();
        agregarAPanel(grupos, true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void asigVacacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asigVacacionesActionPerformed
        // TODO add your handling code here:
        AsignarVacacion asignar = new AsignarVacacion();
        agregarAPanel(asignar, true);
    }//GEN-LAST:event_asigVacacionesActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        CRUDAreaSede sedesAreas = new CRUDAreaSede();
        agregarAPanel(sedesAreas, true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        VistaInventario inv = VistaInventario.getInstancia();
        agregarAPanel(inv, true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        DlgMovimientoInventario movInventario = DlgMovimientoInventario.getInstancia();
        agregarAPanel(movInventario, true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        VistaVerMovimientos movimientos = VistaVerMovimientos.getInstancia();
        agregarAPanel(movimientos, true);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // TODO add your handling code here:
        MantenimientoCampo campo = MantenimientoCampo.getInstancia();
        agregarAPanel(campo, true);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // TODO add your handling code here:
        MantenimientoBien bien = MantenimientoBien.getInstancia();
        agregarAPanel(bien, true);
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        // TODO add your handling code here:
        MantenimientoClase clase = MantenimientoClase.getInstancia();
        agregarAPanel(clase, true);
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        // TODO add your handling code here:
        MantenimientoFactura factura = MantenimientoFactura.getInstancia();
        agregarAPanel(factura, true);
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        // TODO add your handling code here:
        MantenimientoTipo tipo = MantenimientoTipo.getInstancia();
        agregarAPanel(tipo, true);
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void mnuStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStockActionPerformed
        // TODO add your handling code here:
        VistaStock stock = VistaStock.getInstancia();
        agregarAPanel(stock, true);
    }//GEN-LAST:event_mnuStockActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        VistaImprimir imprimir = VistaImprimir.getInstancia();
        agregarAPanel(imprimir, true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void mnuReporteInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReporteInventarioActionPerformed
        // TODO add your handling code here:
        VistaReporteInventario reporteInventario = VistaReporteInventario.getInstancia();
        agregarAPanel(reporteInventario, true);
    }//GEN-LAST:event_mnuReporteInventarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem asigVacaciones;
    private javax.swing.JButton btnAsignarPermiso;
    private javax.swing.JButton btnEmpleados;
    private javax.swing.JButton btnMarcaciones;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblJuvitec;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnuAsignarPermiso;
    private javax.swing.JMenuItem mnuAsistencia;
    private javax.swing.JMenu mnuBien;
    private javax.swing.JMenuItem mnuCambiarContrasenia;
    private javax.swing.JMenu mnuConfiguracion;
    private javax.swing.JMenuItem mnuConfiguracionBD;
    private javax.swing.JMenuItem mnuControlUsuario;
    private javax.swing.JMenu mnuHorario;
    private javax.swing.JMenu mnuInventarios;
    private javax.swing.JMenuItem mnuJornada;
    private javax.swing.JMenu mnuMarcaciones;
    private javax.swing.JMenuItem mnuMarcacionesSinProcesar;
    private javax.swing.JMenuItem mnuPeriodos;
    private javax.swing.JMenu mnuPermiso;
    private javax.swing.JMenuItem mnuRepPermiso;
    private javax.swing.JMenuItem mnuRepVacacion;
    private javax.swing.JMenuItem mnuReporteInventario;
    private javax.swing.JMenu mnuReportes;
    private javax.swing.JMenuItem mnuStock;
    private javax.swing.JMenuItem mnuTiposPermiso;
    private javax.swing.JMenuItem mnuVerEmpleados;
    private javax.swing.JPanel pnlAccesos;
    private javax.swing.JPanel pnlBotnes;
    private javax.swing.JPanel pnlDatosUsuario;
    private javax.swing.JPanel pnlFooter;
    // End of variables declaration//GEN-END:variables

    private void agregarAPanel(JInternalFrame internal) {
        this.agregarAPanel(internal, false);
    }
    Dimension minimo = new Dimension(1024, 628);

    private void agregarAPanel(JInternalFrame internal, boolean maximizar) {
        if (!this.desktopPane.isAncestorOf(internal)) {
            this.desktopPane.add(internal);
            internal.setVisible(true);
            try {

                internal.setMinimumSize(minimo);
                internal.setPreferredSize(minimo);
//                internal.setMaximumSize(minimo);
                internal.setMaximum(maximizar);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void agregarAPanel(JInternalFrame internal, int ancho, int largo) {
        if (!this.desktopPane.isAncestorOf(internal)) {
            this.desktopPane.add(internal);
            internal.setSize(ancho, largo);
            internal.setVisible(true);
            Dimension desktopSize = desktopPane.getSize();
            Dimension jInternalFrameSize = internal.getSize();
            internal.setLocation((desktopSize.width - jInternalFrameSize.width) / 2,
                    (desktopSize.height - jInternalFrameSize.height) / 2);
        }
    }

    private void empleados() {
        VistaEmpleado ve = new VistaEmpleado();
        agregarAPanel(ve, true);
    }

    private void marcaciones() {
        VistaMarcaciones marcaciones = new VistaMarcaciones();
        agregarAPanel(marcaciones, true);
    }

    private void permiso() {
        AsignarPermiso asignar = new AsignarPermiso();
        agregarAPanel(asignar, true);
    }

    private void horarios() {
        CRUDHorario horarios = new CRUDHorario();
        agregarAPanel(horarios, true);
    }

    private void registroAsistencia() {
        RptRegistroAsistencia registroAsistencia = new RptRegistroAsistencia();
//        FrmReporteAsistencia registroAsistencia = new FrmReporteAsistencia();
        agregarAPanel(registroAsistencia, true);
    }

    private final EmpleadoControlador ec = new EmpleadoControlador();
    private final DateFormat dfTimestamp = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    private final UsuarioControlador uc = new UsuarioControlador();

    public void setUsuario(Usuario u) {
        if (u != null) {
            UsuarioActivo.setUsuario(u);
            Empleado e = u.getEmpleado();
            //+ " \nUsuario: " + u.getLogin() + " | \nRol: " + u.getRol().getNombre() + " | \nUlt. inicio de sesión: " + (u.getUltimoInicio() != null ? dfTimestamp.format(u.getUltimoInicio()) : dfTimestamp.format(new Date())) + " |"
            lblUsuario.setText(e.getPaterno() + " " + e.getMaterno() + " " + e.getNombre() );
            lblRol.setText(u.getRol().getNombre());
            lblFecha.setText("Ult. inicio de sesión: " + (u.getUltimoInicio() != null ? dfTimestamp.format(u.getUltimoInicio()) : dfTimestamp.format(new Date())));
            this.habilitarMenu();
            if (u.getUltimoInicio() == null) {

            } else {
                u.setUltimoInicio(new Date());
            }

            uc.modificar(u);
        } else {
            System.out.println("USUARIO NULL =(");
        }
    }

    private void reporteAsistencia() {
        RptRegistroAsistencia asistencia = new RptRegistroAsistencia();
        agregarAPanel(asistencia, true);
    }

    private void reportePermiso() {
        RptPermisos permisos = new RptPermisos();
//        agregarAPanel(permisos, 1024, 864);
        agregarAPanel(permisos, true);
    }

    private void reporteVacaciones() {
        RptVacaciones vacaciones = new RptVacaciones();
        agregarAPanel(vacaciones, true);
    }

    private void habilitarMenu() {
        List<RolAcceso> accesos = UsuarioActivo.getUsuario().getRol().getRolAccesoList();

        boolean horario = false;
        boolean periodo = false;
        boolean permiso = false;
        boolean vacacion = false;
        boolean reportes = false;
        boolean configuracion = false;

        //Permiso para los botones
        boolean botonEmpleados = false;
        boolean botonMarcaciones = false;
        boolean botonAsignarPermiso = false;
        boolean botonHorarios = false;
        boolean botonRegistroAsistencia = false;

        //Caso de Salidas no Autorizadas (Guardian)
        boolean asignarVacaciones = true;
        boolean tiposPermiso = true;
        boolean horasExtra = true;
        boolean sedeArea = true;

        for (RolAcceso acceso : accesos) {
            if (acceso.getAcceso().getClase().equals("HORARIO")) {
                horario = true;
                botonEmpleados = true;
                botonMarcaciones = true;
                botonHorarios = true;

            } else if (acceso.getAcceso().getClase().equals("PERIODO")) {
                periodo = true;
                botonAsignarPermiso = true;

            } else if (acceso.getAcceso().getClase().equals("PERMISO")) {
                permiso = true;
                botonAsignarPermiso = true;
                if (UsuarioActivo.getUsuario().getRol().getNombre().equals("GUARDIAN")) {

                    asignarVacaciones = false;
                    tiposPermiso = false;
                    botonMarcaciones = false;
                    horasExtra = false;
                    sedeArea = false;
                }

            } else if (acceso.getAcceso().getClase().equals("VACACION")) {
                vacacion = true;
            } else if (acceso.getAcceso().getClase().equals("REPORTES")) {
                reportes = true;
            } else if (acceso.getAcceso().getClase().equals("CONFIGURACION")) {
                configuracion = true;
                botonRegistroAsistencia = true;
            }
        }

        mnuHorario.setEnabled(horario);
        mnuPeriodos.setEnabled(periodo);
//        System.out.println("PERMISO: "+ permiso);
        mnuPermiso.setEnabled(permiso);
        mnuPermiso.setEnabled(vacacion);
        mnuMarcaciones.setEnabled(botonMarcaciones);
        mnuTiposPermiso.setEnabled(tiposPermiso);
        mnuAsignarPermiso.setEnabled(permiso);
//        mnuAsignarVacaciones.setEnabled(asignarVacaciones);
//        mnuHorasExtra.setEnabled(horasExtra);
//        mnuSedesAreas.setEnabled(sedeArea);
        asigVacaciones.setEnabled(vacacion);

        mnuReportes.setEnabled(reportes);
//        mnuUsuarios.setEnabled(configuracion);
        mnuConfiguracionBD.setEnabled(configuracion);
//        mnuRolUsuario.setEnabled(configuracion);
        mnuControlUsuario.setEnabled(configuracion);

        btnEmpleados.setEnabled(botonEmpleados);
        btnMarcaciones.setEnabled(botonMarcaciones);
        btnAsignarPermiso.setEnabled(botonAsignarPermiso);

    }

    private void ocultarInventario() {
        
        this.mnuMarcaciones.setVisible(false); this.mnuMarcaciones.setEnabled(false);
        this.mnuHorario.setVisible(false); this.mnuHorario.setEnabled(false);
        this.mnuPermiso.setVisible(false); this.mnuPermiso.setEnabled(false);
        
        this.mnuAsistencia.setVisible(false); this.mnuAsistencia.setEnabled(false);
        this.mnuRepPermiso.setVisible(false); this.mnuRepPermiso.setEnabled(false);
        this.mnuRepVacacion.setVisible(false); this.mnuRepVacacion.setEnabled(false);
        
//        this.btnEmpleados.setVisible(false); this.btnEmpleados.setEnabled(false);
//        this.btnMarcaciones.setVisible(false); this.btnMarcaciones.setEnabled(false);
//        this.btnAsignarPermiso.setVisible(false); this.btnAsignarPermiso.setEnabled(false);
               
               
        
    }
    
    /**
     * Ejecuta la funcion de comprobacion de alertas
     */
//    private void reloj(){
//        Timer reloj = new Timer();
//       
//        reloj.scheduleAtFixedRate(new TimerTask(){
//            @Override
//            public void run(){
//                System.out.println("Se ejecuta cada 10 s");
//                comprobadorAlertas();
//            }
//        }
//        , 10000
//        , 3600000);
//    }
    
    /**
     *Funcion que trabaja con la lista de alertas sin notificar
     */
//    private void comprobadorAlertas(){
//        List<Alerta> alertasPendientes = ac.buscarXEstado(1);
//        
//        if(!alertasPendientes.isEmpty()){
//            Date fecha = new Date();
//            alertasPendientes.stream().forEach((a) -> {
//                //Consultamos a la seccion del alumno
//                Matricula matriculaVigente = mc.buscarXAlumnoXPeriodo(pc.buscarTodosOrden().get(0), a.getEmpleado());
//                Seccion seccionAlumno = matriculaVigente.getSeccion();
//                
//                //Traemos al auxiliar responsable para usar su correo como emisor
//                Empleado auxiliarSeccion = asgc.buscarXSeccionXTipoXFecha(seccionAlumno, 1, fecha).getResponsable();
//                Correo correoAuxiliar = auxiliarSeccion.getCorreo();
//                //Traemos el email del apoderado
//                Empleado apoderado = ec.buscarApoderado(a.getEmpleado().getNroDocumento());
//                
//                List<Notificacion> listaNotificaciones = new ArrayList<Notificacion>();
//                Notificacion notificacion = new Notificacion();
//                notificacion.setAlerta(a);
//                notificacion.setAsunto("NOTIFICACION POR TRES TARDANZAS CONSECUTIVAS");
//                notificacion.setEmisor(correoAuxiliar.getUsuario());
//                notificacion.setConCopia(null);
//                notificacion.setCopiaOculta(null);
//                notificacion.setPara(apoderado.getFichaGeneral().getEmail());
//                notificacion.setFechaEnvio(fecha);
//                notificacion.setMensaje("La alumna "+a.getEmpleado().getNombreCompleto()+" ha registrado 3 tardanzas consecutivas: \n"
//                        + "\n Comuniquese con la institución para tratar sobre el tema.");
//                notificacion.setEstado(2);
//                notificacion.setTipo(1);
//                listaNotificaciones.add(notificacion);
//                
//                a.setEstado(2);
//                a.setNotificacionList(listaNotificaciones);
//                
//                //Enviamos la notificacion
//                MensajeC envioNotificacion = new MensajeC(correoAuxiliar, ssc.buscarTodos().get(0), notificacion);
//                try {
//                    envioNotificacion.enviar();
//                    notificacion.setEstado(1);
//                } catch (MessagingException ex) {
//                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                nc.setSeleccionado(notificacion);
//                ac.setSeleccionado(a);
//                nc.accion(1);
//                ac.accion(2);
//            });
//        }
//    }
    
    public class BackgroundJMenuBar extends JMenuBar{
        Color bgColor= new Color(45,115,167);
     

        public void setColor(Color color)
        {
            bgColor=color;
        }

        @Override
        protected void paintComponent(Graphics g)
        {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g;
            g2d.setColor(bgColor);
            g2d.fillRect(0, 0, getWidth() - 1, getHeight() - 1);

        }
    }
}
